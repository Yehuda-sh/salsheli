rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // === Helper Functions ===
    
    // בדיקה אם המשתמש מחובר
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // בדיקה אם המשתמש הוא הבעלים של הנתונים
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // בדיקה אם המשתמש שייך ל-household
    function isHouseholdMember(householdId) {
      return isAuthenticated() && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.household_id == householdId;
    }
    
    // בדיקה אם שני משתמשים באותו household
    function sameHousehold(otherUserId) {
      return isAuthenticated() &&
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             exists(/databases/$(database)/documents/users/$(otherUserId)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.household_id ==
             get(/databases/$(database)/documents/users/$(otherUserId)).data.household_id;
    }
    
    // === Users Collection ===
    match /users/{userId} {
      // משתמש יכול לקרוא ולכתוב רק את הפרופיל שלו
      allow read: if isOwner(userId);
      allow write: if isOwner(userId);
      
      // מנהלים יכולים לקרוא את כל המשתמשים (אופציונלי)
      // allow read: if isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // === Receipts Collection ===
    match /receipts/{receiptId} {
      // קריאה: רק משתמשים מאותו household
      allow read: if isAuthenticated() && 
                     isHouseholdMember(resource.data.household_id);
      
      // כתיבה: רק משתמשים מאותו household
      allow create: if isAuthenticated() && 
                       isHouseholdMember(request.resource.data.household_id);
      
      allow update: if isAuthenticated() && 
                       isHouseholdMember(resource.data.household_id);
      
      allow delete: if isAuthenticated() && 
                       isHouseholdMember(resource.data.household_id);
    }
    
    // === Inventory Collection ===
    match /inventory/{itemId} {
      // קריאה: רק משתמשים מאותו household
      allow read: if isAuthenticated() && 
                     isHouseholdMember(resource.data.household_id);
      
      // כתיבה: רק משתמשים מאותו household
      allow create: if isAuthenticated() && 
                       isHouseholdMember(request.resource.data.household_id);
      
      allow update: if isAuthenticated() && 
                       isHouseholdMember(resource.data.household_id);
      
      allow delete: if isAuthenticated() && 
                       isHouseholdMember(resource.data.household_id);
    }
    
    // === Products Collection ===
    match /products/{productId} {
      // מוצרים פומביים - כולם יכולים לקרוא
      allow read: if true;
      
      // רק מנהלים יכולים לכתוב
      allow write: if isAuthenticated() && 
                      get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // === Shopping Lists Collection ===
    match /shopping_lists/{listId} {
      // קריאה: רק משתמשים מאותו household
      allow read: if isAuthenticated() && 
                     isHouseholdMember(resource.data.household_id);
      
      // כתיבה: רק משתמשים מאותו household
      allow create: if isAuthenticated() && 
                       isHouseholdMember(request.resource.data.household_id);
      
      allow update: if isAuthenticated() && 
                       isHouseholdMember(resource.data.household_id);
      
      allow delete: if isAuthenticated() && 
                       isHouseholdMember(resource.data.household_id);
    }
    
    // === Templates Collection === 🆕 מתוקן!
    match /templates/{templateId} {
      // קריאה: 
      // 1. תבניות מערכת (is_system=true) - כולם יכולים לקרוא
      // 2. תבניות שאני יצרתי (user_id = שלי)
      // 3. תבניות shared של חברי household שלי
      allow read: if isAuthenticated() && (
        resource.data.is_system == true ||
        resource.data.user_id == request.auth.uid ||
        (resource.data.format == 'shared' && sameHousehold(resource.data.user_id))
      );
      
      // יצירה: רק תבניות משתמש (לא system!)
      // חובה: is_system=false + user_id=שלי
      allow create: if isAuthenticated() && 
                       request.resource.data.is_system == false &&
                       request.resource.data.user_id == request.auth.uid;
      
      // עדכון: רק תבניות שאני יצרתי (לא system!)
      allow update: if isAuthenticated() && 
                       resource.data.is_system == false &&
                       resource.data.user_id == request.auth.uid;
      
      // מחיקה: רק תבניות שאני יצרתי (לא system!)
      allow delete: if isAuthenticated() && 
                       resource.data.is_system == false &&
                       resource.data.user_id == request.auth.uid;
    }
    
    // === Habits Collection (אם קיים) ===
    match /habits/{habitId} {
      // קריאה: רק משתמשים מאותו household
      allow read: if isAuthenticated() && 
                     isHouseholdMember(resource.data.household_id);
      
      // כתיבה: רק משתמשים מאותו household
      allow create: if isAuthenticated() && 
                       isHouseholdMember(request.resource.data.household_id);
      
      allow update: if isAuthenticated() && 
                       isHouseholdMember(resource.data.household_id);
      
      allow delete: if isAuthenticated() && 
                       isHouseholdMember(resource.data.household_id);
    }
    
    // === Deny All Other Collections ===
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
