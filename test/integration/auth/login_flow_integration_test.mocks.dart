// Mocks generated by Mockito 5.4.6 from annotations
// in memozap/test/integration/auth/login_flow_integration_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:ui' as _i7;

import 'package:firebase_auth/firebase_auth.dart' as _i2;
import 'package:flutter/material.dart' as _i5;
import 'package:memozap/models/user_entity.dart' as _i3;
import 'package:memozap/providers/user_context.dart' as _i4;
import 'package:memozap/repositories/user_repository.dart' as _i9;
import 'package:memozap/services/auth_service.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUserCredential_0 extends _i1.SmartFake
    implements _i2.UserCredential {
  _FakeUserCredential_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUserEntity_1 extends _i1.SmartFake implements _i3.UserEntity {
  _FakeUserEntity_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [UserContext].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserContext extends _i1.Mock implements _i4.UserContext {
  MockUserContext() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isLoggedIn =>
      (super.noSuchMethod(Invocation.getter(#isLoggedIn), returnValue: false)
          as bool);

  @override
  bool get isLoading =>
      (super.noSuchMethod(Invocation.getter(#isLoading), returnValue: false)
          as bool);

  @override
  bool get hasError =>
      (super.noSuchMethod(Invocation.getter(#hasError), returnValue: false)
          as bool);

  @override
  _i5.ThemeMode get themeMode =>
      (super.noSuchMethod(
            Invocation.getter(#themeMode),
            returnValue: _i5.ThemeMode.system,
          )
          as _i5.ThemeMode);

  @override
  bool get compactView =>
      (super.noSuchMethod(Invocation.getter(#compactView), returnValue: false)
          as bool);

  @override
  bool get showPrices =>
      (super.noSuchMethod(Invocation.getter(#showPrices), returnValue: false)
          as bool);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i6.Future<void> signUp({
    required String? email,
    required String? password,
    required String? name,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signUp, [], {
              #email: email,
              #password: password,
              #name: name,
            }),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> signIn({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signIn, [], {
              #email: email,
              #password: password,
            }),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> signOut() =>
      (super.noSuchMethod(
            Invocation.method(#signOut, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> signOutAndClearAllData() =>
      (super.noSuchMethod(
            Invocation.method(#signOutAndClearAllData, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> logout() =>
      (super.noSuchMethod(
            Invocation.method(#logout, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> saveUser(_i3.UserEntity? user) =>
      (super.noSuchMethod(
            Invocation.method(#saveUser, [user]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> updateUserProfile({String? name, String? avatar}) =>
      (super.noSuchMethod(
            Invocation.method(#updateUserProfile, [], {
              #name: name,
              #avatar: avatar,
            }),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> sendPasswordResetEmail(String? email) =>
      (super.noSuchMethod(
            Invocation.method(#sendPasswordResetEmail, [email]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  void setThemeMode(_i5.ThemeMode? mode) => super.noSuchMethod(
    Invocation.method(#setThemeMode, [mode]),
    returnValueForMissingStub: null,
  );

  @override
  void toggleCompactView() => super.noSuchMethod(
    Invocation.method(#toggleCompactView, []),
    returnValueForMissingStub: null,
  );

  @override
  void toggleShowPrices() => super.noSuchMethod(
    Invocation.method(#toggleShowPrices, []),
    returnValueForMissingStub: null,
  );

  @override
  _i6.Future<void> retry() =>
      (super.noSuchMethod(
            Invocation.method(#retry, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> clearAll() =>
      (super.noSuchMethod(
            Invocation.method(#clearAll, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void addListener(_i7.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i7.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i8.AuthService {
  MockAuthService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Stream<_i2.User?> get authStateChanges =>
      (super.noSuchMethod(
            Invocation.getter(#authStateChanges),
            returnValue: _i6.Stream<_i2.User?>.empty(),
          )
          as _i6.Stream<_i2.User?>);

  @override
  bool get isSignedIn =>
      (super.noSuchMethod(Invocation.getter(#isSignedIn), returnValue: false)
          as bool);

  @override
  bool get isEmailVerified =>
      (super.noSuchMethod(
            Invocation.getter(#isEmailVerified),
            returnValue: false,
          )
          as bool);

  @override
  _i6.Future<_i2.UserCredential> signUp({
    required String? email,
    required String? password,
    required String? name,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signUp, [], {
              #email: email,
              #password: password,
              #name: name,
            }),
            returnValue: _i6.Future<_i2.UserCredential>.value(
              _FakeUserCredential_0(
                this,
                Invocation.method(#signUp, [], {
                  #email: email,
                  #password: password,
                  #name: name,
                }),
              ),
            ),
          )
          as _i6.Future<_i2.UserCredential>);

  @override
  _i6.Future<_i2.UserCredential> signIn({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signIn, [], {
              #email: email,
              #password: password,
            }),
            returnValue: _i6.Future<_i2.UserCredential>.value(
              _FakeUserCredential_0(
                this,
                Invocation.method(#signIn, [], {
                  #email: email,
                  #password: password,
                }),
              ),
            ),
          )
          as _i6.Future<_i2.UserCredential>);

  @override
  _i6.Future<void> signOut() =>
      (super.noSuchMethod(
            Invocation.method(#signOut, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> sendPasswordResetEmail(String? email) =>
      (super.noSuchMethod(
            Invocation.method(#sendPasswordResetEmail, [email]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> sendEmailVerification() =>
      (super.noSuchMethod(
            Invocation.method(#sendEmailVerification, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> updateDisplayName(String? displayName) =>
      (super.noSuchMethod(
            Invocation.method(#updateDisplayName, [displayName]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> updateEmail(String? newEmail) =>
      (super.noSuchMethod(
            Invocation.method(#updateEmail, [newEmail]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> updatePassword(String? newPassword) =>
      (super.noSuchMethod(
            Invocation.method(#updatePassword, [newPassword]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> reauthenticate({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticate, [], {
              #email: email,
              #password: password,
            }),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> deleteAccount() =>
      (super.noSuchMethod(
            Invocation.method(#deleteAccount, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> reloadUser() =>
      (super.noSuchMethod(
            Invocation.method(#reloadUser, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);
}

/// A class which mocks [UserRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRepository extends _i1.Mock implements _i9.UserRepository {
  MockUserRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i3.UserEntity?> fetchUser(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#fetchUser, [userId]),
            returnValue: _i6.Future<_i3.UserEntity?>.value(),
          )
          as _i6.Future<_i3.UserEntity?>);

  @override
  _i6.Future<_i3.UserEntity> saveUser(_i3.UserEntity? user) =>
      (super.noSuchMethod(
            Invocation.method(#saveUser, [user]),
            returnValue: _i6.Future<_i3.UserEntity>.value(
              _FakeUserEntity_1(this, Invocation.method(#saveUser, [user])),
            ),
          )
          as _i6.Future<_i3.UserEntity>);

  @override
  _i6.Future<void> deleteUser(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteUser, [userId]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<bool> existsUser(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#existsUser, [userId]),
            returnValue: _i6.Future<bool>.value(false),
          )
          as _i6.Future<bool>);

  @override
  _i6.Future<List<_i3.UserEntity>> getAllUsers({String? householdId}) =>
      (super.noSuchMethod(
            Invocation.method(#getAllUsers, [], {#householdId: householdId}),
            returnValue: _i6.Future<List<_i3.UserEntity>>.value(
              <_i3.UserEntity>[],
            ),
          )
          as _i6.Future<List<_i3.UserEntity>>);

  @override
  _i6.Future<_i3.UserEntity?> findByEmail(String? email) =>
      (super.noSuchMethod(
            Invocation.method(#findByEmail, [email]),
            returnValue: _i6.Future<_i3.UserEntity?>.value(),
          )
          as _i6.Future<_i3.UserEntity?>);

  @override
  _i6.Future<void> updateLastLogin(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#updateLastLogin, [userId]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<_i3.UserEntity> createUser({
    required String? userId,
    required String? email,
    required String? name,
    String? householdId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createUser, [], {
              #userId: userId,
              #email: email,
              #name: name,
              #householdId: householdId,
            }),
            returnValue: _i6.Future<_i3.UserEntity>.value(
              _FakeUserEntity_1(
                this,
                Invocation.method(#createUser, [], {
                  #userId: userId,
                  #email: email,
                  #name: name,
                  #householdId: householdId,
                }),
              ),
            ),
          )
          as _i6.Future<_i3.UserEntity>);

  @override
  _i6.Future<void> updateProfile({
    required String? userId,
    String? name,
    String? avatar,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateProfile, [], {
              #userId: userId,
              #name: name,
              #avatar: avatar,
            }),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Stream<_i3.UserEntity?> watchUser(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#watchUser, [userId]),
            returnValue: _i6.Stream<_i3.UserEntity?>.empty(),
          )
          as _i6.Stream<_i3.UserEntity?>);

  @override
  _i6.Future<void> clearAll({String? householdId}) =>
      (super.noSuchMethod(
            Invocation.method(#clearAll, [], {#householdId: householdId}),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);
}
